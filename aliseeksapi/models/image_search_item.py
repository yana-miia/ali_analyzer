# coding: utf-8

"""
    Aliseeks API

    AliExpress product searching and product details retrieval API.   # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ImageSearchItem(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'title': 'str',
        'image_url': 'str',
        'price': 'Amount',
        'orders': 'int'
    }

    attribute_map = {
        'id': 'id',
        'title': 'title',
        'image_url': 'imageUrl',
        'price': 'price',
        'orders': 'orders'
    }

    def __init__(self, id=None, title=None, image_url=None, price=None, orders=None):  # noqa: E501
        """ImageSearchItem - a model defined in OpenAPI"""  # noqa: E501

        self._id = None
        self._title = None
        self._image_url = None
        self._price = None
        self._orders = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if title is not None:
            self.title = title
        if image_url is not None:
            self.image_url = image_url
        if price is not None:
            self.price = price
        if orders is not None:
            self.orders = orders

    @property
    def id(self):
        """Gets the id of this ImageSearchItem.  # noqa: E501

        AliExpress product ID   # noqa: E501

        :return: The id of this ImageSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ImageSearchItem.

        AliExpress product ID   # noqa: E501

        :param id: The id of this ImageSearchItem.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def title(self):
        """Gets the title of this ImageSearchItem.  # noqa: E501

        The title / subject of the AliExpress product   # noqa: E501

        :return: The title of this ImageSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ImageSearchItem.

        The title / subject of the AliExpress product   # noqa: E501

        :param title: The title of this ImageSearchItem.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def image_url(self):
        """Gets the image_url of this ImageSearchItem.  # noqa: E501

        The image of the item   # noqa: E501

        :return: The image_url of this ImageSearchItem.  # noqa: E501
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ImageSearchItem.

        The image of the item   # noqa: E501

        :param image_url: The image_url of this ImageSearchItem.  # noqa: E501
        :type: str
        """

        self._image_url = image_url

    @property
    def price(self):
        """Gets the price of this ImageSearchItem.  # noqa: E501


        :return: The price of this ImageSearchItem.  # noqa: E501
        :rtype: Amount
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ImageSearchItem.


        :param price: The price of this ImageSearchItem.  # noqa: E501
        :type: Amount
        """

        self._price = price

    @property
    def orders(self):
        """Gets the orders of this ImageSearchItem.  # noqa: E501

        The orders of the item   # noqa: E501

        :return: The orders of this ImageSearchItem.  # noqa: E501
        :rtype: int
        """
        return self._orders

    @orders.setter
    def orders(self, orders):
        """Sets the orders of this ImageSearchItem.

        The orders of the item   # noqa: E501

        :param orders: The orders of this ImageSearchItem.  # noqa: E501
        :type: int
        """

        self._orders = orders

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ImageSearchItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
