# coding: utf-8

"""
    Aliseeks API

    AliExpress product searching and product details retrieval API.   # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class SkuPriceOptionProperty(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'property_id': 'int',
        'property_name': 'str',
        'value_id': 'int',
        'value_name': 'str',
        'value_display_name': 'str',
        'ship_from_country': 'str'
    }

    attribute_map = {
        'property_id': 'propertyId',
        'property_name': 'propertyName',
        'value_id': 'valueId',
        'value_name': 'valueName',
        'value_display_name': 'valueDisplayName',
        'ship_from_country': 'shipFromCountry'
    }

    def __init__(self, property_id=None, property_name=None, value_id=None, value_name=None, value_display_name=None, ship_from_country=None):  # noqa: E501
        """SkuPriceOptionProperty - a model defined in OpenAPI"""  # noqa: E501

        self._property_id = None
        self._property_name = None
        self._value_id = None
        self._value_name = None
        self._value_display_name = None
        self._ship_from_country = None
        self.discriminator = None

        if property_id is not None:
            self.property_id = property_id
        if property_name is not None:
            self.property_name = property_name
        if value_id is not None:
            self.value_id = value_id
        if value_name is not None:
            self.value_name = value_name
        if value_display_name is not None:
            self.value_display_name = value_display_name
        if ship_from_country is not None:
            self.ship_from_country = ship_from_country

    @property
    def property_id(self):
        """Gets the property_id of this SkuPriceOptionProperty.  # noqa: E501

        The ID of the property   # noqa: E501

        :return: The property_id of this SkuPriceOptionProperty.  # noqa: E501
        :rtype: int
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this SkuPriceOptionProperty.

        The ID of the property   # noqa: E501

        :param property_id: The property_id of this SkuPriceOptionProperty.  # noqa: E501
        :type: int
        """

        self._property_id = property_id

    @property
    def property_name(self):
        """Gets the property_name of this SkuPriceOptionProperty.  # noqa: E501

        The name of the property   # noqa: E501

        :return: The property_name of this SkuPriceOptionProperty.  # noqa: E501
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name):
        """Sets the property_name of this SkuPriceOptionProperty.

        The name of the property   # noqa: E501

        :param property_name: The property_name of this SkuPriceOptionProperty.  # noqa: E501
        :type: str
        """

        self._property_name = property_name

    @property
    def value_id(self):
        """Gets the value_id of this SkuPriceOptionProperty.  # noqa: E501

        The ID of the property value   # noqa: E501

        :return: The value_id of this SkuPriceOptionProperty.  # noqa: E501
        :rtype: int
        """
        return self._value_id

    @value_id.setter
    def value_id(self, value_id):
        """Sets the value_id of this SkuPriceOptionProperty.

        The ID of the property value   # noqa: E501

        :param value_id: The value_id of this SkuPriceOptionProperty.  # noqa: E501
        :type: int
        """

        self._value_id = value_id

    @property
    def value_name(self):
        """Gets the value_name of this SkuPriceOptionProperty.  # noqa: E501

        The name of the property value   # noqa: E501

        :return: The value_name of this SkuPriceOptionProperty.  # noqa: E501
        :rtype: str
        """
        return self._value_name

    @value_name.setter
    def value_name(self, value_name):
        """Sets the value_name of this SkuPriceOptionProperty.

        The name of the property value   # noqa: E501

        :param value_name: The value_name of this SkuPriceOptionProperty.  # noqa: E501
        :type: str
        """

        self._value_name = value_name

    @property
    def value_display_name(self):
        """Gets the value_display_name of this SkuPriceOptionProperty.  # noqa: E501

        The display name of the property value   # noqa: E501

        :return: The value_display_name of this SkuPriceOptionProperty.  # noqa: E501
        :rtype: str
        """
        return self._value_display_name

    @value_display_name.setter
    def value_display_name(self, value_display_name):
        """Sets the value_display_name of this SkuPriceOptionProperty.

        The display name of the property value   # noqa: E501

        :param value_display_name: The value_display_name of this SkuPriceOptionProperty.  # noqa: E501
        :type: str
        """

        self._value_display_name = value_display_name

    @property
    def ship_from_country(self):
        """Gets the ship_from_country of this SkuPriceOptionProperty.  # noqa: E501

        The country that the sku is shipped from   # noqa: E501

        :return: The ship_from_country of this SkuPriceOptionProperty.  # noqa: E501
        :rtype: str
        """
        return self._ship_from_country

    @ship_from_country.setter
    def ship_from_country(self, ship_from_country):
        """Sets the ship_from_country of this SkuPriceOptionProperty.

        The country that the sku is shipped from   # noqa: E501

        :param ship_from_country: The ship_from_country of this SkuPriceOptionProperty.  # noqa: E501
        :type: str
        """

        self._ship_from_country = ship_from_country

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SkuPriceOptionProperty):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
